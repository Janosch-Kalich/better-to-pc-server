// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.proto

#include "com.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace to_pc_server {
PROTOBUF_CONSTEXPR RequestGetData::RequestGetData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestGetDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestGetDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestGetDataDefaultTypeInternal() {}
  union {
    RequestGetData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestGetDataDefaultTypeInternal _RequestGetData_default_instance_;
PROTOBUF_CONSTEXPR RequestSetData::RequestSetData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestSetDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestSetDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestSetDataDefaultTypeInternal() {}
  union {
    RequestSetData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestSetDataDefaultTypeInternal _RequestSetData_default_instance_;
PROTOBUF_CONSTEXPR RequestDoData::RequestDoData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.function_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestDoDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestDoDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestDoDataDefaultTypeInternal() {}
  union {
    RequestDoData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestDoDataDefaultTypeInternal _RequestDoData_default_instance_;
PROTOBUF_CONSTEXPR RequestMessage::RequestMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_.data_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct RequestMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestMessageDefaultTypeInternal() {}
  union {
    RequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestMessageDefaultTypeInternal _RequestMessage_default_instance_;
PROTOBUF_CONSTEXPR ResponseMessage::ResponseMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResponseMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseMessageDefaultTypeInternal() {}
  union {
    ResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseMessageDefaultTypeInternal _ResponseMessage_default_instance_;
}  // namespace to_pc_server
static ::_pb::Metadata file_level_metadata_com_2eproto[5];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_com_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_com_2eproto = nullptr;

const uint32_t TableStruct_com_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::to_pc_server::RequestGetData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::to_pc_server::RequestGetData, _impl_.var_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::to_pc_server::RequestSetData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::to_pc_server::RequestSetData, _impl_.var_),
  PROTOBUF_FIELD_OFFSET(::to_pc_server::RequestSetData, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::to_pc_server::RequestDoData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::to_pc_server::RequestDoData, _impl_.function_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::to_pc_server::RequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::to_pc_server::RequestMessage, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::to_pc_server::RequestMessage, _impl_.type_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::to_pc_server::RequestMessage, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::to_pc_server::ResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::to_pc_server::ResponseMessage, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::to_pc_server::ResponseMessage, _impl_.data_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::to_pc_server::RequestGetData)},
  { 7, -1, -1, sizeof(::to_pc_server::RequestSetData)},
  { 15, -1, -1, sizeof(::to_pc_server::RequestDoData)},
  { 22, -1, -1, sizeof(::to_pc_server::RequestMessage)},
  { 33, -1, -1, sizeof(::to_pc_server::ResponseMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::to_pc_server::_RequestGetData_default_instance_._instance,
  &::to_pc_server::_RequestSetData_default_instance_._instance,
  &::to_pc_server::_RequestDoData_default_instance_._instance,
  &::to_pc_server::_RequestMessage_default_instance_._instance,
  &::to_pc_server::_ResponseMessage_default_instance_._instance,
};

const char descriptor_table_protodef_com_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tcom.proto\022\014to_pc_server\"\035\n\016RequestGetD"
  "ata\022\013\n\003var\030\001 \001(\t\"+\n\016RequestSetData\022\013\n\003va"
  "r\030\001 \001(\t\022\014\n\004data\030\002 \001(\t\"$\n\rRequestDoData\022\023"
  "\n\013function_id\030\001 \001(\t\"\325\001\n\016RequestMessage\022\'"
  "\n\004type\030\001 \001(\0162\031.to_pc_server.MessageType\022"
  "0\n\010get_data\030\002 \001(\0132\034.to_pc_server.Request"
  "GetDataH\000\0220\n\010set_data\030\003 \001(\0132\034.to_pc_serv"
  "er.RequestSetDataH\000\022.\n\007do_data\030\004 \001(\0132\033.t"
  "o_pc_server.RequestDoDataH\000B\006\n\004data\"E\n\017R"
  "esponseMessage\022$\n\006status\030\001 \001(\0162\024.to_pc_s"
  "erver.Status\022\014\n\004data\030\002 \001(\t*\'\n\013MessageTyp"
  "e\022\007\n\003GET\020\000\022\007\n\003SET\020\001\022\006\n\002DO\020\002* \n\006Status\022\013\n"
  "\007SUCCESS\020\000\022\t\n\005ERROR\020\001B\020\252\002\rCommunicationb"
  "\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_com_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_com_2eproto = {
    false, false, 527, descriptor_table_protodef_com_2eproto,
    "com.proto",
    &descriptor_table_com_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_com_2eproto::offsets,
    file_level_metadata_com_2eproto, file_level_enum_descriptors_com_2eproto,
    file_level_service_descriptors_com_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_com_2eproto_getter() {
  return &descriptor_table_com_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_com_2eproto(&descriptor_table_com_2eproto);
namespace to_pc_server {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_com_2eproto);
  return file_level_enum_descriptors_com_2eproto[0];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_com_2eproto);
  return file_level_enum_descriptors_com_2eproto[1];
}
bool Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class RequestGetData::_Internal {
 public:
};

RequestGetData::RequestGetData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:to_pc_server.RequestGetData)
}
RequestGetData::RequestGetData(const RequestGetData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestGetData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var().empty()) {
    _this->_impl_.var_.Set(from._internal_var(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:to_pc_server.RequestGetData)
}

inline void RequestGetData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RequestGetData::~RequestGetData() {
  // @@protoc_insertion_point(destructor:to_pc_server.RequestGetData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestGetData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_.Destroy();
}

void RequestGetData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestGetData::Clear() {
// @@protoc_insertion_point(message_clear_start:to_pc_server.RequestGetData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestGetData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string var = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_var();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "to_pc_server.RequestGetData.var"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestGetData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:to_pc_server.RequestGetData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string var = 1;
  if (!this->_internal_var().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var().data(), static_cast<int>(this->_internal_var().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "to_pc_server.RequestGetData.var");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_var(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:to_pc_server.RequestGetData)
  return target;
}

size_t RequestGetData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:to_pc_server.RequestGetData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var = 1;
  if (!this->_internal_var().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestGetData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestGetData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestGetData::GetClassData() const { return &_class_data_; }


void RequestGetData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestGetData*>(&to_msg);
  auto& from = static_cast<const RequestGetData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:to_pc_server.RequestGetData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var().empty()) {
    _this->_internal_set_var(from._internal_var());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestGetData::CopyFrom(const RequestGetData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:to_pc_server.RequestGetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestGetData::IsInitialized() const {
  return true;
}

void RequestGetData::InternalSwap(RequestGetData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_, lhs_arena,
      &other->_impl_.var_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestGetData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_com_2eproto_getter, &descriptor_table_com_2eproto_once,
      file_level_metadata_com_2eproto[0]);
}

// ===================================================================

class RequestSetData::_Internal {
 public:
};

RequestSetData::RequestSetData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:to_pc_server.RequestSetData)
}
RequestSetData::RequestSetData(const RequestSetData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestSetData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var().empty()) {
    _this->_impl_.var_.Set(from._internal_var(), 
      _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:to_pc_server.RequestSetData)
}

inline void RequestSetData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RequestSetData::~RequestSetData() {
  // @@protoc_insertion_point(destructor:to_pc_server.RequestSetData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestSetData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_.Destroy();
  _impl_.data_.Destroy();
}

void RequestSetData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestSetData::Clear() {
// @@protoc_insertion_point(message_clear_start:to_pc_server.RequestSetData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestSetData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string var = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_var();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "to_pc_server.RequestSetData.var"));
        } else
          goto handle_unusual;
        continue;
      // string data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "to_pc_server.RequestSetData.data"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestSetData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:to_pc_server.RequestSetData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string var = 1;
  if (!this->_internal_var().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var().data(), static_cast<int>(this->_internal_var().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "to_pc_server.RequestSetData.var");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_var(), target);
  }

  // string data = 2;
  if (!this->_internal_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "to_pc_server.RequestSetData.data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:to_pc_server.RequestSetData)
  return target;
}

size_t RequestSetData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:to_pc_server.RequestSetData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var = 1;
  if (!this->_internal_var().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var());
  }

  // string data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestSetData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestSetData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestSetData::GetClassData() const { return &_class_data_; }


void RequestSetData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestSetData*>(&to_msg);
  auto& from = static_cast<const RequestSetData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:to_pc_server.RequestSetData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var().empty()) {
    _this->_internal_set_var(from._internal_var());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestSetData::CopyFrom(const RequestSetData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:to_pc_server.RequestSetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestSetData::IsInitialized() const {
  return true;
}

void RequestSetData::InternalSwap(RequestSetData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_, lhs_arena,
      &other->_impl_.var_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_, lhs_arena,
      &other->_impl_.data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestSetData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_com_2eproto_getter, &descriptor_table_com_2eproto_once,
      file_level_metadata_com_2eproto[1]);
}

// ===================================================================

class RequestDoData::_Internal {
 public:
};

RequestDoData::RequestDoData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:to_pc_server.RequestDoData)
}
RequestDoData::RequestDoData(const RequestDoData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestDoData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.function_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.function_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_function_id().empty()) {
    _this->_impl_.function_id_.Set(from._internal_function_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:to_pc_server.RequestDoData)
}

inline void RequestDoData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.function_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.function_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RequestDoData::~RequestDoData() {
  // @@protoc_insertion_point(destructor:to_pc_server.RequestDoData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestDoData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.function_id_.Destroy();
}

void RequestDoData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestDoData::Clear() {
// @@protoc_insertion_point(message_clear_start:to_pc_server.RequestDoData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.function_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestDoData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string function_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_function_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "to_pc_server.RequestDoData.function_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestDoData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:to_pc_server.RequestDoData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string function_id = 1;
  if (!this->_internal_function_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_function_id().data(), static_cast<int>(this->_internal_function_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "to_pc_server.RequestDoData.function_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_function_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:to_pc_server.RequestDoData)
  return target;
}

size_t RequestDoData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:to_pc_server.RequestDoData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string function_id = 1;
  if (!this->_internal_function_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_function_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestDoData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestDoData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestDoData::GetClassData() const { return &_class_data_; }


void RequestDoData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestDoData*>(&to_msg);
  auto& from = static_cast<const RequestDoData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:to_pc_server.RequestDoData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_function_id().empty()) {
    _this->_internal_set_function_id(from._internal_function_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestDoData::CopyFrom(const RequestDoData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:to_pc_server.RequestDoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestDoData::IsInitialized() const {
  return true;
}

void RequestDoData::InternalSwap(RequestDoData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.function_id_, lhs_arena,
      &other->_impl_.function_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestDoData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_com_2eproto_getter, &descriptor_table_com_2eproto_once,
      file_level_metadata_com_2eproto[2]);
}

// ===================================================================

class RequestMessage::_Internal {
 public:
  static const ::to_pc_server::RequestGetData& get_data(const RequestMessage* msg);
  static const ::to_pc_server::RequestSetData& set_data(const RequestMessage* msg);
  static const ::to_pc_server::RequestDoData& do_data(const RequestMessage* msg);
};

const ::to_pc_server::RequestGetData&
RequestMessage::_Internal::get_data(const RequestMessage* msg) {
  return *msg->_impl_.data_.get_data_;
}
const ::to_pc_server::RequestSetData&
RequestMessage::_Internal::set_data(const RequestMessage* msg) {
  return *msg->_impl_.data_.set_data_;
}
const ::to_pc_server::RequestDoData&
RequestMessage::_Internal::do_data(const RequestMessage* msg) {
  return *msg->_impl_.data_.do_data_;
}
void RequestMessage::set_allocated_get_data(::to_pc_server::RequestGetData* get_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_data();
  if (get_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(get_data);
    if (message_arena != submessage_arena) {
      get_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_data, submessage_arena);
    }
    set_has_get_data();
    _impl_.data_.get_data_ = get_data;
  }
  // @@protoc_insertion_point(field_set_allocated:to_pc_server.RequestMessage.get_data)
}
void RequestMessage::set_allocated_set_data(::to_pc_server::RequestSetData* set_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_data();
  if (set_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(set_data);
    if (message_arena != submessage_arena) {
      set_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, set_data, submessage_arena);
    }
    set_has_set_data();
    _impl_.data_.set_data_ = set_data;
  }
  // @@protoc_insertion_point(field_set_allocated:to_pc_server.RequestMessage.set_data)
}
void RequestMessage::set_allocated_do_data(::to_pc_server::RequestDoData* do_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_data();
  if (do_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(do_data);
    if (message_arena != submessage_arena) {
      do_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, do_data, submessage_arena);
    }
    set_has_do_data();
    _impl_.data_.do_data_ = do_data;
  }
  // @@protoc_insertion_point(field_set_allocated:to_pc_server.RequestMessage.do_data)
}
RequestMessage::RequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:to_pc_server.RequestMessage)
}
RequestMessage::RequestMessage(const RequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.type_ = from._impl_.type_;
  clear_has_data();
  switch (from.data_case()) {
    case kGetData: {
      _this->_internal_mutable_get_data()->::to_pc_server::RequestGetData::MergeFrom(
          from._internal_get_data());
      break;
    }
    case kSetData: {
      _this->_internal_mutable_set_data()->::to_pc_server::RequestSetData::MergeFrom(
          from._internal_set_data());
      break;
    }
    case kDoData: {
      _this->_internal_mutable_do_data()->::to_pc_server::RequestDoData::MergeFrom(
          from._internal_do_data());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:to_pc_server.RequestMessage)
}

inline void RequestMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){0}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_data();
}

RequestMessage::~RequestMessage() {
  // @@protoc_insertion_point(destructor:to_pc_server.RequestMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_data()) {
    clear_data();
  }
}

void RequestMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestMessage::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:to_pc_server.RequestMessage)
  switch (data_case()) {
    case kGetData: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.data_.get_data_;
      }
      break;
    }
    case kSetData: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.data_.set_data_;
      }
      break;
    }
    case kDoData: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.data_.do_data_;
      }
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


void RequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:to_pc_server.RequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .to_pc_server.MessageType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::to_pc_server::MessageType>(val));
        } else
          goto handle_unusual;
        continue;
      // .to_pc_server.RequestGetData get_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .to_pc_server.RequestSetData set_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_set_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .to_pc_server.RequestDoData do_data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_do_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:to_pc_server.RequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .to_pc_server.MessageType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // .to_pc_server.RequestGetData get_data = 2;
  if (_internal_has_get_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::get_data(this),
        _Internal::get_data(this).GetCachedSize(), target, stream);
  }

  // .to_pc_server.RequestSetData set_data = 3;
  if (_internal_has_set_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::set_data(this),
        _Internal::set_data(this).GetCachedSize(), target, stream);
  }

  // .to_pc_server.RequestDoData do_data = 4;
  if (_internal_has_do_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::do_data(this),
        _Internal::do_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:to_pc_server.RequestMessage)
  return target;
}

size_t RequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:to_pc_server.RequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .to_pc_server.MessageType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (data_case()) {
    // .to_pc_server.RequestGetData get_data = 2;
    case kGetData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.data_.get_data_);
      break;
    }
    // .to_pc_server.RequestSetData set_data = 3;
    case kSetData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.data_.set_data_);
      break;
    }
    // .to_pc_server.RequestDoData do_data = 4;
    case kDoData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.data_.do_data_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestMessage::GetClassData() const { return &_class_data_; }


void RequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestMessage*>(&to_msg);
  auto& from = static_cast<const RequestMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:to_pc_server.RequestMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  switch (from.data_case()) {
    case kGetData: {
      _this->_internal_mutable_get_data()->::to_pc_server::RequestGetData::MergeFrom(
          from._internal_get_data());
      break;
    }
    case kSetData: {
      _this->_internal_mutable_set_data()->::to_pc_server::RequestSetData::MergeFrom(
          from._internal_set_data());
      break;
    }
    case kDoData: {
      _this->_internal_mutable_do_data()->::to_pc_server::RequestDoData::MergeFrom(
          from._internal_do_data());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestMessage::CopyFrom(const RequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:to_pc_server.RequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMessage::IsInitialized() const {
  return true;
}

void RequestMessage::InternalSwap(RequestMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_.data_, other->_impl_.data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_com_2eproto_getter, &descriptor_table_com_2eproto_once,
      file_level_metadata_com_2eproto[3]);
}

// ===================================================================

class ResponseMessage::_Internal {
 public:
};

ResponseMessage::ResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:to_pc_server.ResponseMessage)
}
ResponseMessage::ResponseMessage(const ResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResponseMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:to_pc_server.ResponseMessage)
}

inline void ResponseMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){}
    , decltype(_impl_.status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResponseMessage::~ResponseMessage() {
  // @@protoc_insertion_point(destructor:to_pc_server.ResponseMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}

void ResponseMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:to_pc_server.ResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .to_pc_server.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::to_pc_server::Status>(val));
        } else
          goto handle_unusual;
        continue;
      // string data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "to_pc_server.ResponseMessage.data"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:to_pc_server.ResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .to_pc_server.Status status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // string data = 2;
  if (!this->_internal_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "to_pc_server.ResponseMessage.data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:to_pc_server.ResponseMessage)
  return target;
}

size_t ResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:to_pc_server.ResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  // .to_pc_server.Status status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseMessage::GetClassData() const { return &_class_data_; }


void ResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResponseMessage*>(&to_msg);
  auto& from = static_cast<const ResponseMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:to_pc_server.ResponseMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseMessage::CopyFrom(const ResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:to_pc_server.ResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseMessage::IsInitialized() const {
  return true;
}

void ResponseMessage::InternalSwap(ResponseMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_, lhs_arena,
      &other->_impl_.data_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_com_2eproto_getter, &descriptor_table_com_2eproto_once,
      file_level_metadata_com_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace to_pc_server
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::to_pc_server::RequestGetData*
Arena::CreateMaybeMessage< ::to_pc_server::RequestGetData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::to_pc_server::RequestGetData >(arena);
}
template<> PROTOBUF_NOINLINE ::to_pc_server::RequestSetData*
Arena::CreateMaybeMessage< ::to_pc_server::RequestSetData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::to_pc_server::RequestSetData >(arena);
}
template<> PROTOBUF_NOINLINE ::to_pc_server::RequestDoData*
Arena::CreateMaybeMessage< ::to_pc_server::RequestDoData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::to_pc_server::RequestDoData >(arena);
}
template<> PROTOBUF_NOINLINE ::to_pc_server::RequestMessage*
Arena::CreateMaybeMessage< ::to_pc_server::RequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::to_pc_server::RequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::to_pc_server::ResponseMessage*
Arena::CreateMaybeMessage< ::to_pc_server::ResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::to_pc_server::ResponseMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
